1. Edit Shopping Cart on the side
2. Make add to cart a real button
3. Add an additional Check-out Page for delivery address, card info, etc



Task 2:
    1. Construct Pre-fab buttons
    2. Add onclick event handler
        onclick => fetch value 
                => delete previous tab
                => append next tab
                =>


// TODO:
// 1. fabricate an array of tag options: add to cart, allergy, glaze selection drop box, qty selection drop box, finished
// 2. allow indexing to add and remove to the prev/next tag
        // 2.1 have an index stored as id?
3. Reset the target to original add to cart if target has changed
4. store the information locally 


Change saturation?

Tasks done:
1. implement smart auto-fill description on Item-description page with JS
2. implement function that keep track of all items added to cart with JS
3. implement function to help display in cart item on the side bar with JS
4. make function described in 3 in both speed order page and product menu page
5. implement function to keep track of total item counts with JS
6. implement function to directly delete item on cart side bar with JS
7. implement function to make in-menu add to cart fully functional with JS
    make sure minor errors won't destroy the system
8. Decrease the saturation of the site with CSS



Note:
0. The in-menu add to cart needs to return to itself after clicking on confirm (This is a bug)
1. Today's special page function is still under construction
2. The checkout page is still ugly and needs to be modified
3. The sidebar cart page needs to be modified to have a wishlist implementation
4. Need a final payment & delivery page after the checkout page


6B Update:
1. Implemented HTML & CSS for checkout Page
2. Load cart info and display under the table template style with JS
3. custom buttons
4. in checkout page edit
5. Make buttons features available
6. In active buttons will grey out and become un clickable
7. Partially implemented a total calculation function with JS

TODO:
2. Calculate subtotal & Grand total
3. Match coupon & shipping fee

Challenge:
1. Modularity
2. redundant code => functional programming
3. 